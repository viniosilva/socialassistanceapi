// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/viniosilva/socialassistanceapi/internal/api (interfaces: HealthApi)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockHealthApi is a mock of HealthApi interface.
type MockHealthApi struct {
	ctrl     *gomock.Controller
	recorder *MockHealthApiMockRecorder
}

// MockHealthApiMockRecorder is the mock recorder for MockHealthApi.
type MockHealthApiMockRecorder struct {
	mock *MockHealthApi
}

// NewMockHealthApi creates a new mock instance.
func NewMockHealthApi(ctrl *gomock.Controller) *MockHealthApi {
	mock := &MockHealthApi{ctrl: ctrl}
	mock.recorder = &MockHealthApiMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHealthApi) EXPECT() *MockHealthApiMockRecorder {
	return m.recorder
}

// Configure mocks base method.
func (m *MockHealthApi) Configure() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Configure")
}

// Configure indicates an expected call of Configure.
func (mr *MockHealthApiMockRecorder) Configure() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Configure", reflect.TypeOf((*MockHealthApi)(nil).Configure))
}
