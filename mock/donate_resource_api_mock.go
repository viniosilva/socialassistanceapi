// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/viniosilva/socialassistanceapi/internal/api (interfaces: DonateResourceApi)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDonateResourceApi is a mock of DonateResourceApi interface.
type MockDonateResourceApi struct {
	ctrl     *gomock.Controller
	recorder *MockDonateResourceApiMockRecorder
}

// MockDonateResourceApiMockRecorder is the mock recorder for MockDonateResourceApi.
type MockDonateResourceApiMockRecorder struct {
	mock *MockDonateResourceApi
}

// NewMockDonateResourceApi creates a new mock instance.
func NewMockDonateResourceApi(ctrl *gomock.Controller) *MockDonateResourceApi {
	mock := &MockDonateResourceApi{ctrl: ctrl}
	mock.recorder = &MockDonateResourceApiMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDonateResourceApi) EXPECT() *MockDonateResourceApiMockRecorder {
	return m.recorder
}

// Configure mocks base method.
func (m *MockDonateResourceApi) Configure() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Configure")
}

// Configure indicates an expected call of Configure.
func (mr *MockDonateResourceApiMockRecorder) Configure() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Configure", reflect.TypeOf((*MockDonateResourceApi)(nil).Configure))
}
