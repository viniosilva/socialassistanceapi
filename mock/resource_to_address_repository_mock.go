// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/viniosilva/socialassistanceapi/internal/repository (interfaces: ResourceToAddressRepository)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockResourceToAddressRepository is a mock of ResourceToAddressRepository interface.
type MockResourceToAddressRepository struct {
	ctrl     *gomock.Controller
	recorder *MockResourceToAddressRepositoryMockRecorder
}

// MockResourceToAddressRepositoryMockRecorder is the mock recorder for MockResourceToAddressRepository.
type MockResourceToAddressRepositoryMockRecorder struct {
	mock *MockResourceToAddressRepository
}

// NewMockResourceToAddressRepository creates a new mock instance.
func NewMockResourceToAddressRepository(ctrl *gomock.Controller) *MockResourceToAddressRepository {
	mock := &MockResourceToAddressRepository{ctrl: ctrl}
	mock.recorder = &MockResourceToAddressRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockResourceToAddressRepository) EXPECT() *MockResourceToAddressRepositoryMockRecorder {
	return m.recorder
}

// Associate mocks base method.
func (m *MockResourceToAddressRepository) Associate(arg0 context.Context, arg1 int, arg2 []int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Associate", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Associate indicates an expected call of Associate.
func (mr *MockResourceToAddressRepositoryMockRecorder) Associate(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Associate", reflect.TypeOf((*MockResourceToAddressRepository)(nil).Associate), arg0, arg1, arg2)
}
