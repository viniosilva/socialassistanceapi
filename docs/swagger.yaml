definitions:
  api.HttpError:
    properties:
      code:
        example: 400
        type: integer
      message:
        example: invalid parameter
        type: string
    type: object
  service.CreateCustomerDto:
    properties:
      name:
        example: Cláudio
        type: string
    required:
    - name
    type: object
  service.Customer:
    properties:
      id:
        example: 1
        type: integer
      name:
        example: Cláudio
        type: string
    type: object
  service.CustomerResponse:
    properties:
      data:
        $ref: '#/definitions/service.Customer'
    type: object
  service.CustomersResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/service.Customer'
        type: array
    type: object
info:
  contact: {}
paths:
  /api/v1/customers:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.CustomersResponse'
      summary: find all customers
      tags:
      - customer
    post:
      consumes:
      - application/json
      parameters:
      - description: Create customer
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/service.CreateCustomerDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/service.CustomerResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.HttpError'
      summary: create a customer
      tags:
      - customer
  /api/v1/customers/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.CustomersResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.HttpError'
      summary: find customer by id
      tags:
      - customer
swagger: "2.0"
